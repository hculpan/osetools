// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

import (
	"github.com/hculpan/osetools/cmd/web/templates/components"
	"github.com/hculpan/osetools/internal/db"
	"strconv"
)

func GoldForXpTemplate(appTitle string, username string, characters []db.Character, xpMultiplier int) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Head(appTitle).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<body><div class=\"d-flex\" style=\"min-height: 100vh;\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = components.Sidebar("Campaigns", username, true).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<div class=\"container mt-5\"><h1>Gold for XP</h1><form method=\"POST\" action=\"/gold-for-xp\"><div class=\"container\"><div class=\"row\"><div class=\"col-6\"><table class=\"table table-dark table-striped\"><thead><tr><th class=\"text-center\" scope=\"col\">Selected</th><th scope=\"col\">Name</th><th scope=\"col\">Player</th></tr></thead> <tbody><tr><td class=\"text-center\"><input class=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"masterCheckbox\"> Select All</td><td></td><td></td></tr>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		for _, c := range characters {
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<tr><td class=\"text-center\"><input class=\"form-check-input childCheckbox\" type=\"checkbox\" value=\"")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var2 string
			templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(
				strconv.Itoa(int(c.ID)))
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/templates/goldforxptemplate.templ`, Line: 43, Col: 71}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" name=\"selectedIds[]\"></td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var3 string
			templ_7745c5c3_Var3, templ_7745c5c3_Err = templ.JoinStringErrs(c.Name)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/templates/goldforxptemplate.templ`, Line: 45, Col: 52}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var3))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td><td>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			var templ_7745c5c3_Var4 string
			templ_7745c5c3_Var4, templ_7745c5c3_Err = templ.JoinStringErrs(c.PlayerName)
			if templ_7745c5c3_Err != nil {
				return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/templates/goldforxptemplate.templ`, Line: 46, Col: 58}
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var4))
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
			_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</td></tr>")
			if templ_7745c5c3_Err != nil {
				return templ_7745c5c3_Err
			}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</tbody></table></div><div class=\"col-6\"><div class=\"mb-3\"><label for=\"xpAmount\" class=\"form-label\">Gold Amount</label> <input type=\"number\" id=\"xpAmount\" name=\"goldAmount\" class=\"form-control\" required></div><div class=\"mb-3\"><label for=\"xpAmount\" class=\"form-label\">XP Multiplier</label> <input type=\"number\" id=\"xpMultiplier\" name=\"xpMultiplier\" class=\"form-control\" value=\"")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var5 string
		templ_7745c5c3_Var5, templ_7745c5c3_Err = templ.JoinStringErrs(strconv.Itoa(xpMultiplier))
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `cmd/web/templates/goldforxptemplate.templ`, Line: 60, Col: 146}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var5))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("\" required></div><div class=\"mb-3\"><label for=\"reason\" class=\"form-label\">Reason</label> <input type=\"text\" id=\"reason\" name=\"reason\" class=\"form-control\" required></div></div></div><div class=\"row text-center\"><div class=\"col\"><button type=\"submit\" class=\"btn button\" id=\"addXpButton\" disabled>Add XP</button></div></div></div></form></div></div><script lang=\"javascript\">\n        document.getElementById('masterCheckbox').addEventListener('change', function () {\n            var isChecked = this.checked;\n            var childCheckboxes = document.querySelectorAll('.childCheckbox');\n\n            childCheckboxes.forEach(function (checkbox) {\n                checkbox.checked = isChecked;\n            });\n        });\n\n        document.addEventListener('DOMContentLoaded', function () {\n            const selectAllCheckbox = document.getElementById('masterCheckbox');\n            const checkboxes = document.querySelectorAll('.childCheckbox');\n            const submitBtn = document.getElementById('addXpButton');\n\n            const toggleSubmitButtonState = () => {\n                // Check if any of the item checkboxes are checked\n                const isAnyCheckboxChecked = Array.from(checkboxes).some(checkbox => checkbox.checked);\n                // Enable submit button if any checkbox is checked, otherwise disable\n                submitBtn.disabled = !isAnyCheckboxChecked;\n            };\n\n            // Event listener for the \"Select All\" checkbox\n            selectAllCheckbox.addEventListener('change', function () {\n                // Check/uncheck all item checkboxes to match the \"Select All\" state\n                checkboxes.forEach(checkbox => {\n                    checkbox.checked = this.checked;\n                });\n                // Update submit button state\n                toggleSubmitButtonState();\n            });\n\n            // Event listeners for the dynamically created checkboxes\n            checkboxes.forEach(checkbox => {\n                checkbox.addEventListener('change', toggleSubmitButtonState);\n            });\n        });\n    </script></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
